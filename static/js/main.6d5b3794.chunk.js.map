{"version":3,"sources":["components/taskCard.js","components/NewTask.js","App.js","index.js"],"names":["TaskCard","props","useState","edit","setEdit","changeTask","setChangeTask","className","completed","type","placeholder","title","onChange","e","target","value","id","onClick","fetch","method","body","JSON","stringify","userId","headers","then","response","json","console","log","alert","parentElement","remove","NewTask","newTask","setNewTask","App","items","setitems","setDataisLoaded","useEffect","map","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAyEeA,EAxEA,SAACC,GAEZ,MAAuBC,oBAAS,GAAhC,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAmCF,mBAAS,IAA5C,mBAAMG,EAAN,KAAkBC,EAAlB,KA+CA,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAWN,EAAMO,UAAY,YAAc,YAC/CL,EAAO,qBAAKI,UAAU,YAAf,SACJ,uBAAOE,KAAK,OAAOC,YAAaT,EAAMU,MAAOC,SAZvC,SAACC,GACfP,EAAcO,EAAEC,OAAOC,QAWoDR,UAAU,eAEvE,qBAAKA,UAAU,OAAf,SAAsB,qCAAQN,EAAMU,WAG9C,sBAAKJ,UAAU,SAAf,UACA,wBAAQQ,MAAOd,EAAMe,GAAIC,QA9Cd,SAACJ,GACZV,EAEqB,KAAfE,GACNa,MAAM,8CAAD,OAA+CL,EAAEC,OAAOC,OAAS,CACtEI,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACjBN,GAAG,GAAD,OAAKH,EAAEC,OAAOC,OAChBJ,MAAM,GAAD,OAAMN,GACXkB,OAAQ,IAGZC,QAAS,CACL,eAAgB,qCAGnBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAUC,QAAQC,IAAIF,GACzBG,MAAM,oBAAD,OAAqBH,EAAKhB,MAA1B,SACTP,GAAQ,GACRE,EAAc,MAEdwB,MAAM,mBACN1B,GAAQ,GACRE,EAAc,KAtBdF,GAAQ,IA4CsCG,UAAU,cAAxD,oBAGA,wBAAQQ,MAAOd,EAAMe,GAAKC,QAzDd,SAACJ,GACjBK,MAAM,8CAAD,OAA+CL,EAAEC,OAAOC,OAAS,CACpEI,OAAQ,WAEVN,EAAEC,OAAOiB,cAAcA,cAAcC,UAqDgBzB,UAAU,cAA3D,2BCZG0B,EAnDD,SAAChC,GAEX,MAA6BC,mBAAS,IAAtC,mBAAMgC,EAAN,KAAeC,EAAf,KA+BA,OAEI,qBAAK5B,UAAU,UAAf,SACI,sBAAKA,UAAU,UAAf,UAKI,uBAAOE,KAAK,OAAOF,UAAU,WAAWG,YAAY,eAAeE,SAZnD,SAACC,GACzBsB,EAAWtB,EAAEC,OAAOC,UAaZ,wBAAQR,UAAU,cAAcU,QAvCzB,WACA,KAAZiB,EACChB,MAAM,6CAA8C,CACpDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBX,MAAM,GAAD,OAAKuB,GACV1B,WAAW,EACXe,OAAQ,IAEZC,QAAS,CACL,eAAgB,qCAGnBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAUC,QAAQC,IAAIF,GAC7BG,MAAM,QAAD,OAASH,EAAKhB,MAAd,cAELmB,MAAM,cAIVK,EAAW,KAkBH,yBCFDC,MArCf,WAEE,MAA0BlC,mBAAS,IAAnC,mBAAOmC,EAAP,KAAcC,EAAd,KACA,EAAwCpC,oBAAS,GAAjD,mBAAqBqC,GAArB,WAcA,OATAC,qBAAU,WACRtB,MAAM,8CACLO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACE,GAAD,OAAUW,EAASX,KACTY,GAAgB,GAChBX,QAAQC,IAAIQ,MAE5B,IAGA,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,oBAAIA,UAAU,UAAd,uBAEI8B,EAAMI,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAEE/B,MAAO+B,EAAK/B,MACZH,UAAakC,EAAKlC,UAClBQ,GAAI0B,EAAK1B,IAHJ0B,EAAK1B,WCxBxB2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6d5b3794.chunk.js","sourcesContent":["import React, { useState} from \"react\";\r\nconst TaskCard=(props)=>{\r\n\r\n    const[edit, setEdit] = useState(false)\r\n    const[changeTask, setChangeTask] = useState('')\r\n    // const[complete, setComplete] = useState(false)\r\n\r\n    const HandleDelete =(e) => {\r\n        fetch(`https://jsonplaceholder.typicode.com/posts/${e.target.value}`, {\r\n          method: \"DELETE\",\r\n        });\r\n        e.target.parentElement.parentElement.remove()\r\n        // console.log(`${e.target.value}`);\r\n      };\r\n\r\n    const HandleEdit = (e) => {\r\n        if(!edit){\r\n            setEdit(true)\r\n        } else if(changeTask !== ''){\r\n            fetch(`https://jsonplaceholder.typicode.com/posts/${e.target.value}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                id: `${e.target.value}`,\r\n                title:  `${changeTask}`,\r\n                userId: 1,\r\n                // completed: `${complete}`\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            })\r\n            .then((response) => response.json())\r\n            .then((json) => {console.log(json)\r\n                alert(`updated to task: ${json.title} `)});\r\n            setEdit(false)\r\n            setChangeTask('')\r\n        } else{\r\n            alert(\"No task changed\")\r\n            setEdit(false)\r\n            setChangeTask('')\r\n        }\r\n    }\r\n\r\n    const changeTodo =(e) =>{\r\n        setChangeTask(e.target.value)\r\n        // console.log(changeTask)\r\n    }\r\n\r\n    // const HandleComplete =(e) => {\r\n    //     setComplete(!e.target.value)\r\n    // }\r\n    return(\r\n        <div className=\"card\">\r\n            <div className={props.completed ? \"completed\" : \"pending\"}/>\r\n            {edit ? <div className=\"taskInput\">\r\n                <input type=\"text\" placeholder={props.title} onChange={changeTodo} className=\"taskText\"/>\r\n                {/* <button className=\"buttonInput\" value={props.completed} onClick={HandleComplete}>Change Complete Status</button> */}\r\n            </div>  : <div className=\"task\"><span> {props.title}</span></div>}\r\n            \r\n            {/* <span>{props.completed ? \"YESSSSSSSS\" : \"NOOOOOOOOOO\"}</span> */}\r\n            <div className=\"action\">   \r\n            <button value={props.id} onClick={HandleEdit} className=\"buttonImage\">\r\n                Update\r\n            </button> \r\n            <button value={props.id}  onClick={HandleDelete} className=\"buttonImage\">\r\n                Delete \r\n            </button>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default TaskCard","import React, { useState} from \"react\";\r\nconst NewTask=(props)=>{\r\n\r\n    const[newTask, setNewTask] = useState('')\r\n\r\n    const AddNewTask = () => {\r\n        if(newTask !== ''){\r\n            fetch(`https://jsonplaceholder.typicode.com/posts`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                title: `${newTask}`,\r\n                completed: false,\r\n                userId: 1,\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            })\r\n            .then((response) => response.json())\r\n            .then((json) => {console.log(json)\r\n            alert(`Task ${json.title} Added`)});\r\n        } else{\r\n            alert(\"Add a task\")\r\n        }\r\n        \r\n\r\n        setNewTask('');\r\n\r\n    }\r\n\r\n    const handleNewTaskChange = (e) => {\r\n        setNewTask(e.target.value);\r\n        // console.log(newTask)\r\n    }\r\n    return(\r\n\r\n        <div className=\"newTask\">\r\n            <div className=\"newCard\">\r\n                {/* <div className=\"newTaskHead\">\r\n                <span> <strong>Add New Task</strong></span>\r\n                </div> */}\r\n                \r\n                <input type=\"text\" className=\"newInput\" placeholder=\"Add New Task\" onChange={handleNewTaskChange}/>\r\n                {/* className=\"taskText\" */}\r\n                <button className=\"buttonInput\" onClick={AddNewTask}>Add  </button>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default NewTask","import React, { useState, useEffect } from \"react\";\nimport TaskCard from \"./components/taskCard\";\nimport NewTask from \"./components/NewTask\";\n\n\nfunction App() {\n\n  const [items, setitems] = useState([]);\n  const [DataisLoaded, setDataisLoaded] = useState(false);\n  \n  // const[changeTask, setChangeTask] = useState()\n\n  \n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos')\n    .then(response => response.json())\n    .then((json) => setitems(json),\n                    setDataisLoaded(true),\n                    console.log(items)\n                    )\n  },[])\n\n  return (\n    <div className=\"App\">\n      <NewTask/>\n      <h2 className=\"heading\">All Tasks</h2>\n      {\n          items.map((item) => ( \n            <TaskCard \n              key={item.id}\n              title={item.title} \n              completed = {item.completed}\n              id={item.id}\n            />\n          \n          ))\n        }\n      \n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}